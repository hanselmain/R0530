library(knitr)
library(d3heatmap) #install.packages("d3heatmap")
library(flexdashboard) #install.packages("flexdashboard")
nba_players <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", row.names = 1)
d3heatmap(nba_players, scale = "column")
```{r setup, include=FALSE}
library(flexdashboard)
library(SportsAnalytics) #install.packages("SportsAnalytics")
library(ggplot2)
library(plotly) #install.packages("plotly")
NBA1516<-fetch_NBAPlayerStatistics('15-16')
```
library(flexdashboard)
library(SportsAnalytics) #install.packages("SportsAnalytics")
library(ggplot2)
library(plotly) #install.packages("plotly")
NBA1516<-fetch_NBAPlayerStatistics('15-16')
install.packages("d3heatmap")
install.packages("flexdashboard")
library(knitr)
library(d3heatmap) #install.packages("d3heatmap")
library(flexdashboard) #install.packages("flexdashboard")
nba_players <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", row.names = 1)
install.packages("flexdashboard")
d3heatmap(nba_players, scale = "column")
d3heatmap(nba_players, scale = "column")
knitr::kable(nba_players[1:20,c("G", "MIN", "PTS")])
library(flexdashboard)
library(SportsAnalytics) #install.packages("SportsAnalytics")
library(ggplot2)
library(plotly) #install.packages("plotly")
NBA1516<-fetch_NBAPlayerStatistics('15-16')
install.packages("SportsAnalytics")
install.packages("plotly")
library(flexdashboard)
library(SportsAnalytics)
library(ggplot2)
library(plotly)
NBA1516<-fetch_NBAPlayerStatistics('15-16')
install.packages("plotly")
p<-ggplot(NBA1516)+geom_point(aes(x=TotalPoints,y=TotalMinutesPlayed))
ggplotly(p)
p<-ggplot(NBA1516)+geom_point(aes(x=TotalPoints,y=TotalMinutesPlayed))
ggplotly(p)
install.packages("SportsAnalytics")
install.packages("plotly")
library(flexdashboard)
library(SportsAnalytics)
library(ggplot2)
library(plotly)
NBA1516<-fetch_NBAPlayerStatistics('15-16')
p<-ggplot(NBA1516)+geom_point(aes(x=TotalPoints,y=TotalMinutesPlayed))
ggplotly(p)
if (!require('ggplot2')){
install.packages("ggplot2")
library(ggplot2)
}
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors=F)
head(polio)
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAACEdEose0cBANn5pL5P2QDRqZCwheBhHUjCDmYBSlP5tJFmiOS4sRH9bN3eNnADNlBOfdk43Vt7PCebU7R1Jx8Q6JH8fHx0FtYFyEK91bhx9erxhGsMasyIRZCZAUZB6p28lE3tUIih8NWAMoZC2nYo9Hj6K60y1Vg3mZAUlVLsbm87mZAIZChhIy9zPmWRYYCQjZAe8dJlIjgZDZD'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("llchu", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
PostCount<-aggregate(id~dateTPE,totalPage,length)
library(knitr)
kable(head(PostCount[order(PostCount$id,decreasing = T),]))
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits = 2)
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits = 2)
MostEfficiency<-aggregate(TotalPoints/TotalMinutesPlayed ~Team+Name+TotalPoints+TotalMinutesPlayed,NBA1415,max)
names(MostEfficiency)<- c("Team","Name","TotalPoints","TotalMinutesPlayed","Efficiency")
TheMostEfficiency<-aggregate(Efficiency~Team,MostEfficiency,max)
NBA1415MostEfficiency<-merge(MostEfficiency,TheMostEfficiency)
output<-NBA1415MostEfficiency[order(NBA1415MostEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits = 2)
ThreesMadeAccuracy<-aggregate(ThreesMade/ThreesAttempted~Team+Name+ThreesMade+ThreesAttempted,NBA1415,max)
names(ThreesMadeAccuracy)<- c("Team","Name","ThreesMade","ThreesAttempted","Accuracy")
MostThreesMadeAccuracy<-aggregate(Accuracy~Team,ThreesMadeAccuracy,max)
NBA1415ThreesMadeAccuracy<-merge(ThreesMadeAccuracy,MostThreesMadeAccuracy)
output<-NBA1415ThreesMadeAccuracy[order(NBA1415ThreesMadeAccuracy$Accuracy,decreasing = T),c("Team","Name","Accuracy")]
library(knitr)
kable(output, digits = 2)
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
ThreesMadeAccuracy<-aggregate(ThreesMade/ThreesAttempted~Team+Name+ThreesMade+ThreesAttempted,NBA1415,max)
names(ThreesMadeAccuracy)<- c("Team","Name","ThreesMade","ThreesAttempted","Accuracy")
MostThreesMadeAccuracy<-aggregate(Accuracy~Team,ThreesMadeAccuracy,max)
NBA1415ThreesMadeAccuracy<-merge(ThreesMadeAccuracy,MostThreesMadeAccuracy)
output<-NBA1415ThreesMadeAccuracy[order(NBA1415ThreesMadeAccuracy$Accuracy,decreasing = T),c("Team","Name","Accuracy")]
library(knitr)
kable(output, digits = 2)
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits = 2)
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits = 2)
MostEfficiency<-aggregate(TotalPoints/TotalMinutesPlayed ~Team+Name+TotalPoints+TotalMinutesPlayed,NBA1415,max)
names(MostEfficiency)<- c("Team","Name","TotalPoints","TotalMinutesPlayed","Efficiency")
TheMostEfficiency<-aggregate(Efficiency~Team,MostEfficiency,max)
NBA1415MostEfficiency<-merge(MostEfficiency,TheMostEfficiency)
output<-NBA1415MostEfficiency[order(NBA1415MostEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits = 2)
ThreesMadeAccuracy<-aggregate(ThreesMade/ThreesAttempted~Team+Name+ThreesMade+ThreesAttempted,NBA1415,max)
names(ThreesMadeAccuracy)<- c("Team","Name","ThreesMade","ThreesAttempted","Accuracy")
MostThreesMadeAccuracy<-aggregate(Accuracy~Team,ThreesMadeAccuracy,max)
NBA1415ThreesMadeAccuracy<-merge(ThreesMadeAccuracy,MostThreesMadeAccuracy)
output<-NBA1415ThreesMadeAccuracy[order(NBA1415ThreesMadeAccuracy$Accuracy,decreasing = T),c("Team","Name","Accuracy")]
library(knitr)
kable(output, digits = 2)
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
install.packages("SportsAnalytics")
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits = 2)
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits = 2)
MostEfficiency<-aggregate(TotalPoints/TotalMinutesPlayed ~Team+Name+TotalPoints+TotalMinutesPlayed,NBA1415,max)
names(MostEfficiency)<- c("Team","Name","TotalPoints","TotalMinutesPlayed","Efficiency")
TheMostEfficiency<-aggregate(Efficiency~Team,MostEfficiency,max)
NBA1415MostEfficiency<-merge(MostEfficiency,TheMostEfficiency)
output<-NBA1415MostEfficiency[order(NBA1415MostEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits = 2)
ThreesMadeAccuracy<-aggregate(ThreesMade/ThreesAttempted~Team+Name+ThreesMade+ThreesAttempted,NBA1415,max)
names(ThreesMadeAccuracy)<- c("Team","Name","ThreesMade","ThreesAttempted","Accuracy")
MostThreesMadeAccuracy<-aggregate(Accuracy~Team,ThreesMadeAccuracy,max)
NBA1415ThreesMadeAccuracy<-merge(ThreesMadeAccuracy,MostThreesMadeAccuracy)
output<-NBA1415ThreesMadeAccuracy[order(NBA1415ThreesMadeAccuracy$Accuracy,decreasing = T),c("Team","Name","Accuracy")]
library(knitr)
kable(output, digits = 2)
if (!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
NBA1415<-fetch_NBAPlayerStatistics("14-15")
# Chunk 1
if (!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
NBA1415<-fetch_NBAPlayerStatistics("14-15")
# Chunk 2
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits = 2)
# Chunk 3
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits = 2)
# Chunk 4
MostEfficiency<-aggregate(TotalPoints/TotalMinutesPlayed ~Team+Name+TotalPoints+TotalMinutesPlayed,NBA1415,max)
names(MostEfficiency)<- c("Team","Name","TotalPoints","TotalMinutesPlayed","Efficiency")
TheMostEfficiency<-aggregate(Efficiency~Team,MostEfficiency,max)
NBA1415MostEfficiency<-merge(MostEfficiency,TheMostEfficiency)
output<-NBA1415MostEfficiency[order(NBA1415MostEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits = 2)
# Chunk 5
ThreesMadeAccuracy<-aggregate(ThreesMade/ThreesAttempted~Team+Name+ThreesMade+ThreesAttempted,NBA1415,max)
names(ThreesMadeAccuracy)<- c("Team","Name","ThreesMade","ThreesAttempted","Accuracy")
MostThreesMadeAccuracy<-aggregate(Accuracy~Team,ThreesMadeAccuracy,max)
NBA1415ThreesMadeAccuracy<-merge(ThreesMadeAccuracy,MostThreesMadeAccuracy)
output<-NBA1415ThreesMadeAccuracy[order(NBA1415ThreesMadeAccuracy$Accuracy,decreasing = T),c("Team","Name","Accuracy")]
library(knitr)
kable(output, digits = 2)
# Chunk 1
if (!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
NBA1415<-fetch_NBAPlayerStatistics("14-15")
# Chunk 2
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits = 2)
# Chunk 3
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits = 2)
# Chunk 4
MostEfficiency<-aggregate(TotalPoints/TotalMinutesPlayed ~Team+Name+TotalPoints+TotalMinutesPlayed,NBA1415,max)
names(MostEfficiency)<- c("Team","Name","TotalPoints","TotalMinutesPlayed","Efficiency")
TheMostEfficiency<-aggregate(Efficiency~Team,MostEfficiency,max)
NBA1415MostEfficiency<-merge(MostEfficiency,TheMostEfficiency)
output<-NBA1415MostEfficiency[order(NBA1415MostEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits = 2)
# Chunk 5
ThreesMadeAccuracy<-aggregate(ThreesMade/ThreesAttempted~Team+Name+ThreesMade+ThreesAttempted,NBA1415,max)
names(ThreesMadeAccuracy)<- c("Team","Name","ThreesMade","ThreesAttempted","Accuracy")
MostThreesMadeAccuracy<-aggregate(Accuracy~Team,ThreesMadeAccuracy,max)
NBA1415ThreesMadeAccuracy<-merge(ThreesMadeAccuracy,MostThreesMadeAccuracy)
output<-NBA1415ThreesMadeAccuracy[order(NBA1415ThreesMadeAccuracy$Accuracy,decreasing = T),c("Team","Name","Accuracy")]
library(knitr)
kable(output, digits = 2)
if (!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
NBA1415<-fetch_NBAPlayerStatistics("14-15")
p<-ggplot(NBA1516)+geom_point(aes(x=TotalPoints,y=TotalMinutesPlayed))
ggplotly(p)
install.packages("SportsAnalytics")
install.packages("plotly")
install.packages("SportsAnalytics")
# Chunk 1: setup
install.packages("SportsAnalytics")
install.packages("plotly")
library(flexdashboard)
library(SportsAnalytics)
library(ggplot2)
library(plotly)
NBA1516<-fetch_NBAPlayerStatistics('15-16')
# Chunk 2
p<-ggplot(NBA1516)+geom_point(aes(x=TotalPoints,y=TotalMinutesPlayed))
ggplotly(p)
